package run;

import java.awt.GridLayout;
import javax.swing.JLabel;
import javax.swing.SwingWorker;
import static run.Generator.changed;
import static run.Generator.tileMatrix;
import tileset.Images;
import tileset.Tile;

public class Display extends javax.swing.JFrame {

    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainDisplay = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainDisplay.setLayout(new java.awt.GridLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Display d = new Display();
                d.setSize(50 * 17, 50 * 17);
                d.setVisible(true);
                GridLayout experimentLayout = new GridLayout(0, 50);
                experimentLayout.setHgap(0);
                experimentLayout.setVgap(0);
                d.mainDisplay.setLayout(experimentLayout);

                for (int i = 0; i < 50; i++) {
                    for (int j = 0; j < 50; j++) {
                        tileMatrix[i][j] = new Tile();
                        JLabel thumb = new JLabel();

                        thumb.setText(tileMatrix[i][j].entropy + "");
                        d.mainDisplay.add(thumb);
                    }
                }

                SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {

                    @Override
                    protected Void doInBackground() throws Exception {

                        while (Generator.waveFunctionCollapse()) {
                            try {
                                while (!changed.isEmpty()) {
                                    int[] coords = changed.pop();
                                    JLabel label = ((JLabel) d.mainDisplay.getComponent(coords[1] * 50 + coords[0])); 
                                    if (tileMatrix[coords[1]][coords[0]].tile == null) {
                                         label.setText(tileMatrix[coords[1]][coords[0]].entropy + "");
                                    } else {
                                        label.setText("");
                                        label.setIcon(Images.getImage(tileMatrix[coords[1]][coords[0]].tile));
                                    }
                                    
                                }
                                
                                Thread.sleep(1);
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }
                        return null;
                    }


                };

                worker.execute();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mainDisplay;
    // End of variables declaration//GEN-END:variables
}
